## Multi-stage build for maanaging dev dependencies
######################################
#
# Unit tests execution stage
#
######################################
FROM c.rzp.io/razorpay/rzp-docker-image-inventory-multi-arch:rzp-golden-image-base-golang-1.24-alpine3.21

ENV CGO_ENABLED 0
ENV GOPRIVATE github.com/razorpay/*

RUN mkdir /src
WORKDIR /src

RUN apk add --update --no-cache --repository http://dl-4.alpinelinux.org/alpine/latest-stable/community/ make bash openssh ca-certificates git make && update-ca-certificates 2>/dev/null || true

# Configure Git to use TOKEN_GIT for authentication using secrets
RUN --mount=type=secret,id=git_token git config --global url."https://golang:$(cat /run/secrets/git_token)@github.com".insteadOf "https://github.com"

# Avoid copying source first since that will invalidate cache for all further layers
COPY go.mod .
COPY go.sum .

# Get dependencies using go.mod and go.sum
# This should be cached unless we modify go.mod/go.sum
RUN --mount=type=secret,id=git_token set -eux && \
    echo 'exec echo $(cat /run/secrets/git_token)' > /tmp/askpass.sh && \
    chmod +x /tmp/askpass.sh && \
    export GIT_ASKPASS=/tmp/askpass.sh && \
    go mod download

# Copy rest of the source code
ADD . /src/
# COPY config/payment/default.toml config/payment/dev.toml

RUN bash build/code-coverage.sh

## copy coverage.out file to dir other than the repo itself.
## repo dir gets overriden once github workspace is volume mounted while running the container

RUN cp tmp/coverage.out /coverage.out
RUN cp tmp/test-output.log /test-output.log
RUN cp tmp/utMetrics.csv /utMetrics.csv
RUN chmod +x build/copy-ut-assets.sh
## /github/workspace is path inside container which is volume mounted from host
ENTRYPOINT ["sh", "-c", "build/copy-ut-assets.sh" ]